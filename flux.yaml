apiVersion: v1
kind: Namespace
metadata:
  labels:
    name: flux
  name: flux

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: flux
  namespace: flux
spec:
  replicas: 1
  selector:
    matchLabels:
      name: flux
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        prometheus.io/port: "3031" # tell prometheus to scrape /metrics endpoint's port.
      labels:
        name: flux
    spec:
      # nodeSelector:
      #   beta.kubernetes.io/os: linux
      serviceAccountName: flux
      volumes:
      - name: git-key
        secret:
          secretName: flux-git-deploy
          defaultMode: 0400 # when mounted read-only, we won't be able to chmod

      # This is a tmpfs used for generating SSH keys. In K8s >= 1.10,
      # mounted secrets are read-only, so we need a separate volume we
      # can write to.
      - name: git-keygen
        emptyDir:
          medium: Memory

      # The following volume is for using a customised known_hosts
      # file, which you will need to do if you host your own git
      # repo rather than using github or the like. You'll also need to
      # mount it into the container, below. See
      # https://docs.fluxcd.io/en/latest/guides/use-private-git-host.html
      # - name: ssh-config
      #   configMap:
      #     name: flux-ssh-config

      # The following volume is for using a customised .kube/config,
      # which you will need to do if you wish to have a different
      # default namespace. You will also need to provide the configmap
      # with an entry for `config`, and uncomment the volumeMount and
      # env entries below.
      # - name: kubeconfig
      #   configMap:
      #     name: flux-kubeconfig

      # The following volume is used to import GPG keys (for signing
      # and verification purposes). You will also need to provide the
      # secret with the keys, and uncomment the volumeMount and args
      # below.
      # - name: gpg-keys
      #   secret:
      #     secretName: flux-gpg-keys
      #     defaultMode: 0400

      containers:
      - name: flux
        # There are no ":latest" images for flux. Find the most recent
        # release or image version at https://hub.docker.com/r/fluxcd/flux/tags
        # and replace the tag here.
        image: docker.io/fluxcd/flux:1.18.0
        imagePullPolicy: IfNotPresent
        resources:
          requests:
            cpu: 50m
            memory: 64Mi
        ports:
        - containerPort: 3030 # informational
        livenessProbe:
          httpGet:
            port: 3030
            path: /api/flux/v6/identity.pub
          initialDelaySeconds: 5
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            port: 3030
            path: /api/flux/v6/identity.pub
          initialDelaySeconds: 5
          timeoutSeconds: 5
        volumeMounts:
        - name: git-key
          mountPath: /etc/fluxd/ssh # to match location given in image's /etc/ssh/config
          readOnly: true # this will be the case perforce in K8s >=1.10
        - name: git-keygen
          mountPath: /var/fluxd/keygen # to match location given in image's /etc/ssh/config

        # Include this if you need to mount a customised known_hosts
        # file; you'll also need the volume declared above.
        # - name: ssh-config
        #   mountPath: /root/.ssh

        # Include this and the volume "kubeconfig" above, and the
        # environment entry "KUBECONFIG" below, to override the config
        # used by kubectl.
        # - name: kubeconfig
        #   mountPath: /etc/fluxd/kube

        # Include this to point kubectl at a different config; you
        # will need to do this if you have mounted an alternate config
        # from a configmap, as in commented blocks above.
        # env:
        # - name: KUBECONFIG
        #   value: /etc/fluxd/kube/config

        # Include this and the volume "gpg-keys" above, and the
        # args below.
        # - name: gpg-keys
        #   mountPath: /root/gpg-import
        #   readOnly: true

        # Include this if you want to supply HTTP basic auth credentials for git
        # via the `GIT_AUTHUSER` and `GIT_AUTHKEY` environment variables using a
        # secret.
        # envFrom:
        # - secretRef:
        #     name: flux-git-auth

        args:

        # If you deployed memcached in a different namespace to flux,
        # or with a different service name, you can supply these
        # following two arguments to tell fluxd how to connect to it.
        # - --memcached-hostname=memcached.default.svc.cluster.local

        # Use the memcached ClusterIP service name by setting the
        # memcached-service to string empty
        - --memcached-service=

        - --sync-interval=5s
        - --git-poll-interval=10s
        - --automation-interval=10s

        # This must be supplied, and be in the tmpfs (emptyDir)
        # mounted above, for K8s >= 1.10
        - --ssh-keygen-dir=/var/fluxd/keygen

        # Replace the following URL to change the Git repository used by Flux.
        # HTTP basic auth credentials can be supplied using environment variables:
        # https://$(GIT_AUTHUSER):$(GIT_AUTHKEY)@github.com/user/repository.git
        - --git-url=git@github.com:luanngominh/gitops
        - --git-branch=master
        - --git-path=namespaces,staging
        - --git-label=flux
        - --git-user=luanngominh
        - --git-email=ngominhluanbox@gmail.com

        # Include these two to enable git commit signing
        # - --git-gpg-key-import=/root/gpg-import
        # - --git-signing-key=<key id>
        
        # Include this to enable git signature verification
        # - --git-verify-signatures

        # Tell flux it has readonly access to the repo (default `false`)
        # - --git-readonly

        # Instruct flux where to put sync bookkeeping (default "git", meaning use a tag in the upstream git repo)
        # - --sync-state=git

        # Include these next two to connect to an "upstream" service
        # (e.g., Weave Cloud). The token is particular to the service.
        # - --connect=wss://cloud.weave.works/api/flux
        # - --token=abc123abc123abc123abc123

        # Enable manifest generation (default `false`)
        # - --manifest-generation=false

        # Serve /metrics endpoint at different port;
        # make sure to set prometheus' annotation to scrape the port value.
        - --listen-metrics=:3031

      # Optional DNS settings, configuring the ndots option may resolve
      # nslookup issues on some Kubernetes setups.
      # dnsPolicy: "None"
      # dnsConfig:
      #   options:
      #     - name: ndots
      #       value: "1"
---
apiVersion: v1
kind: Secret
metadata:
  name: flux-git-deploy
  namespace: flux
data:
  identity: "LS0tLS1CRUdJTiBPUEVOU1NIIFBSSVZBVEUgS0VZLS0tLS0KYjNCbGJuTnphQzFyWlhrdGRqRUFBQUFBQkc1dmJtVUFBQUFFYm05dVpRQUFBQUFBQUFBQkFBQUJGd0FBQUFkemMyZ3RjbgpOaEFBQUFBd0VBQVFBQUFRRUFwd2sxTzNWYmlxQTZPTCtYNUhyZjZYZk0zMXFzQk9pNk5YWVQ2YUQwWmhINWsrcGc2Z0c5CjVSQzNMR0JBbWJwRVRLZS8rcVV5eVVkMG1MZjBubytkaVZqcGdKNGFhSmxWa3l3Y3hRRnlIU0FyaDBJYmVNNTVJQzB2S28KWkt2WGpUa2RFWExsQ3h6Y0E5ZGJLN3U1eDIzS09RK2JsUUhGSm1KdUxJQStsVnVWWERFV2x2cXBibkYvTGVrWkpvc2dHagpjL0c1ODBCeUNjU1VHSzl4amIwek1vZk9teWNPdFRSVGgwTVJRbVRjdWYzaWd4dk5EL3UyOUMzd3N2byt1SGxCYTlXS1haCmxFUUNIWFFLaFRiV2s3bjAzOGJMRlJBelNqc2M2cmFCM3RjUWErNDR4TVVQeWRycklBVEdyK3MvMlV4bFZKb2V6NU1INkwKVG9zQUkrUTZVUUFBQStCZDJURDJYZGt3OWdBQUFBZHpjMmd0Y25OaEFBQUJBUUNuQ1RVN2RWdUtvRG80djVma2V0L3BkOAp6Zldxd0U2TG8xZGhQcG9QUm1FZm1UNm1EcUFiM2xFTGNzWUVDWnVrUk1wNy82cFRMSlIzU1l0L1NlajUySldPbUFuaHBvCm1WV1RMQnpGQVhJZElDdUhRaHQ0em5rZ0xTOHFoa3E5ZU5PUjBSY3VVTEhOd0QxMXNydTduSGJjbzVENXVWQWNVbVltNHMKZ0Q2Vlc1VmNNUmFXK3FsdWNYOHQ2UmttaXlBYU56OGJuelFISUp4SlFZcjNHTnZUTXloODZiSnc2MU5GT0hReEZDWk55NQovZUtERzgwUCs3YjBMZkN5K2o2NGVVRnIxWXBkbVVSQUlkZEFxRk50YVR1ZlRmeHNzVkVETktPeHpxdG9IZTF4QnI3ampFCnhRL0oydXNnQk1hdjZ6L1pUR1ZVbWg3UGt3Zm90T2l3QWo1RHBSQUFBQUF3RUFBUUFBQVFCZ01HRkRPRFhiQXFJRWcvQ0kKVm1vVEhEWVNlVGlPS3lid0dtc2xJdGNhNEVjRTh2ZVVTaVI4Z0wrN0FrS3hSQjZJdGlGTHlVNFJzdUJtQWFrUWxrdDJDSQptTzAzMEp0eU1jZVU2bjlFa3VsSlA4ZEFrMTdGQzhRc2ppaUNzS0tVWk10a2ZQR0JFTUZ5Uk5YdnZVOGlsUXJiQ1MzakJQCjN2T01lUlFOakpVZEFHUURwOFNzTkJOdFg2TXpkOUVtNS8xcmw1RDdINWNQK0hVV3dTUS9EZlYxVW1mSytMajFuS09UdWsKeC85b0l0QmJQVGZGaTkvWjBrZFFWOWJMK0dXeWFxWFhWb3VKaXJjaHpDU0h4YWlUbVMxbTJJTlVSZHN1YzJ2ZGVFMWEyUwpRc0VBS2F4WmsyNEUzeEsvWWdiUTlGWVA1UFRUMVlVWFRGK0RWaklSM092eEFBQUFnUUNYUytSQk1taVdFbEZYUTBqczhyCjh0MTFkVDEzWWMyOWVxdzhEM1pPZTdxazloOU45VGplZmpzVTMrVy9weXFoUmRZMUdvRDhqVXEzOGJtVG8xTUVXK1VrRG8KM3BiRTU2MzU2RmFLMEFmVEp0Q0VxdnpCaGQ4V3ZQekJLamlNVjZ1bWovVWFNdDQvS1E5SEh5RHVYYytVTk8vMHFiVzBDNApzdERvMVVpeUJaWGdBQUFJRUEwT1k2UDlBZmQ4cG1QSmlJQy9tVDdIL2RGWTBHYjJKdGF5WmZPemlaYWFjNWh0Zm9QNUhhCkZWMFJSSFZTYmM4OUZScEJMNVdiVHZOZEFUTkwzQU1wQXBBL3IyL3c3anhhM2Q0VXNUenNaaUVuVEE1QkRtRzA1L0ZCR1UKZmd6eGpBNGMxV0RyckxxcHhQTkluSzVIR3ZlWUxMWmxTNDY4RnpTazg2dkxHZGFrc0FBQUNCQU15eW0wOU0vV3VNZWlhMgpyZ1k2b2RYQWsxS0ZVVEc3Z09rVXJQeWVpL2wrT29VWjRLaDFMTUtFWmlwSlBVbjNDNU5CWnNGd3lGdlZZMzZ3c2dQVWhvCkV3RExNSExSYWh1ZzYxZkp0YngvM2R4SkxObkZJRnRNV3k1ZCtaZytScWp2QVdWRlBlTkNkb3pCTWFlaE1GZW9lb25hTEcKSG9lYnNlbTJYazhQRmN4VEFBQUFKR3hoY0RFek1EVTBRRXhoY0RFek1EVTBjeTFOWVdOQ2IyOXJMVkJ5Ynk1c2IyTmhiQQpFQ0F3UUZCZz09Ci0tLS0tRU5EIE9QRU5TU0ggUFJJVkFURSBLRVktLS0tLQo="
type: Opaque
---
# memcached deployment used by Flux to cache
# container image metadata.
apiVersion: apps/v1
kind: Deployment
metadata:
  name: memcached
  namespace: flux
spec:
  replicas: 1
  selector:
    matchLabels:
      name: memcached
  template:
    metadata:
      labels:
        name: memcached
    spec:
      nodeSelector:
        beta.kubernetes.io/os: linux
      containers:
      - name: memcached
        image: memcached:1.5.20
        imagePullPolicy: IfNotPresent
        args:
        - -m 512   # Maximum memory to use, in megabytes
        - -I 5m    # Maximum size for one item
        - -p 11211 # Default port
        # - -vv    # Uncomment to get logs of each request and response.
        ports:
        - name: clients
          containerPort: 11211
        securityContext:
          runAsUser: 11211
          runAsGroup: 11211
          allowPrivilegeEscalation: false
---
apiVersion: v1
kind: Service
metadata:
  name: memcached
  namespace: flux
spec:
  ports:
    - name: memcached
      port: 11211
  selector:
    name: memcached
---
# The service account, cluster roles, and cluster role binding are
# only needed for Kubernetes with role-based access control (RBAC).
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    name: flux
  name: flux
  namespace: flux
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  labels:
    name: flux
  name: flux
rules:
  - apiGroups: ['*']
    resources: ['*']
    verbs: ['*']
  - nonResourceURLs: ['*']
    verbs: ['*']
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  labels:
    name: flux
  name: flux
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: flux
subjects:
  - kind: ServiceAccount
    name: flux
    namespace: flux
